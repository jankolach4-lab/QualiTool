<analysis>
The previous AI engineer successfully transformed a static dashboard into a Next.js application, integrating Supabase for data and authentication. Key challenges included initial Git/Vercel synchronization, resolved by user intervention. Data integration involved handling Supabase RLS and processing  and  for complex analytics. The AI developed comprehensive Project and VP Analytics, including various charts and tables, clarifying data logic for current status and history. Significant effort was dedicated to refining UI/UX based on user feedback (layout, typography, card sizes, table styling). The Projection Tool was implemented with holiday calculations and manual WE input. A  was integrated for geocoding, which required extensive debugging and improvement for Excel import robustness and geocoding accuracy. Finally, project settings persistence was moved from  to Supabase, necessitating a new  table and RLS policies. The trajectory shows a methodical approach to feature development and iterative refinement.
</analysis>

<product_requirements>
The Qualifizierungstool admin dashboard provides real-time analytics for projects and VPs. It needs:
-   **Overall View:** Total projects, VPs, and residential units (WE).
-   **Project Table:** Details for Project (City), WE, VP count, completions, status percentage, progress bar; clickable rows. Alternating row colors, no colored badges.
-   **Project Analytics:** Charts for daily completions, daily status changes, status breakdown (pie chart with unique colors for each status), status table. Initial daily charts side-by-side, status breakdown next to status table. All charts/tables are dynamic based on selected time range.
-   **Project Projection Tool:** Input for start/end dates, manual total WE, and federal state (Bundesland) for holiday-aware completion forecasting. Forecast capped at total WE, displayed as whole number for completions, 2 decimals for percentage.
-   **VP Table:** Lists VPs for selected project, showing name, WE (project-specific), completions (project-specific), completion percentages (project-specific); clickable rows. Alternating row colors, no colored badges.
-   **VP Analytics:** Charts for daily completions, daily status changes, status breakdown (pie chart with unique colors), hourly activity (with day selector within the card, defaults to current day), summary table. Initial daily charts side-by-side, status breakdown, hourly activity, and summary side-by-side.
-   **Time Range:** Selectable periods (7, 14, 30, 90, 120 days) for bar charts.
-   **Data Source:**  JSONB field and  from Supabase.
-   **Design:** Professional Admin Dashboard Pro title (left-aligned with cards, with an icon). Compact layout with specific card heights (Row 1: 280px, Row 2: 320-360px), Inter font.
-   **Authentication:** Functional login via . Admin whitelist functionality is a deferred consideration.
-   **External Tool Integration:** Polygontool linked from dashboard header, opens in new tab, for geocoding addresses and managing polygons. The tool needs robust Excel import (flexible headers, WE default to 1) and improved geocoding (structured search, viewbox bias, street variations). Polygon coloring on map must accurately reflect  status.
-   **Persistence:** Project settings (start/end dates, manual total WE, federal state) must persist in Supabase.
</product_requirements>

<key_technical_concepts>
-   **Frontend:** Next.js (React, TypeScript), HTML, CSS (), Chart.js with .
-   **BaaS:** Supabase (PostgreSQL, Authentication, Row Level Security).
-   **Database:** PostgreSQL with  (), ,  tables.
-   **Date/Time:** , .
-   **Deployment:** Vercel.
</key_technical_concepts>

<code_architecture>


-   ****:
    -   **Importance**: The main dashboard page, entry point for analytics.
    -   **Changes**: Refactored to fetch , , and . Integrates , , and conditionally . Contains core data processing logic, including  slicing for VPs and  defaulting to 1. TypeScript casting for  fixed a build error.

-   ****:
    -   **Importance**: Defines overall HTML structure.
    -   **Changes**: Updated to include Google Fonts (Inter) for a more serious typography.

-   ****:
    -   **Importance**: Global CSS styling.
    -   **Changes**: Styling for professional, responsive dashboard, including compact elements, alternating row colors (darker pale blue), header adjustments for title/KPIs, and consistent card heights.

-   ****:
    -   **Importance**: Login/registration page.
    -   **Changes**: Read for analysis, but no direct functional code changes related to new login issues (diagnostics provided to user).

-   ****:
    -   **Importance**: Header with navigation and filters.
    -   **Changes**: Title Admin Dashboard Pro moved to left-aligned with cards, new  added, Polygontool button added, linking to  (opens in new tab). KPI numbers typography made smaller and neutral.

-   ****:
    -   **Importance**: Displays project-specific charts and tables.
    -   **Changes**: Layout adjusted for daily charts side-by-side (Row 1: 280px), status breakdown next to status table (Row 2: 320px), uniform status-based colors for pie charts, uses manual  for percentages, badges removed.

-   ****:
    -   **Importance**: New component for project forecasting.
    -   **Changes**: Implemented for start/end dates, manual , federal state selection. Forecast calculation based on 5-day week and state-specific holidays. Forecast completions as whole number, percentage 2 decimals. Data stored/retrieved from  and  (Supabase).

-   ****:
    -   **Importance**: Table of projects.
    -   **Changes**: Alternating row coloring implemented, badges removed, uses manual  for WE column, status percentage, and progress bar.

-   ****:
    -   **Importance**: Displays VP-specific charts and tables.
    -   **Changes**: Layout adjusted for daily charts side-by-side (Row 1: 280px), status breakdown, hourly activity (with date selector in card, defaults to current day), and summary table side-by-side (Row 2: 360px). Uses project-specific data ( slices), manual  for project percentages, uniform status-based colors, badges removed. Card height increased to 360px for Row 2 to prevent summary scrollbar.

-   ****:
    -   **Importance**: Table of VPs within a project.
    -   **Changes**: Columns now display project-specific WE, completions, percentages, reflecting the  slicing.

-   ****:
    -   **Importance**: New utility file for consistent color assignment.
    -   **Changes**: Created to provide a  function with predefined colors for common statuses and hash-based HSL for others, ensuring unique colors in pie charts.

-   ****:
    -   **Importance**: Supabase client, type definitions.
    -   **Changes**: Updated with interfaces for  to support Supabase persistence. Implements  defaulting to 1 for .

-   ****:
    -   **Importance**: Hosts the geocoding and polygon tool.
    -   **Changes**: Initially an  to external URL, then fully embedded locally. Improved Excel import (flexible column aliases, header autodetect, WE default to 1). Enhanced geocoding (structured search, viewbox bias, street variations, candidate scoring). Fixed point-in-polygon logic (swapped lat/lng).

-   ****:
    -   **Changes**:  added.

-   **Supabase Schema ( table - user-executed SQL)**:
    -   **Importance**: Stores project-specific settings persistently.
    -   **Schema**:  (PK), , , , , . RLS policies proposed for read/write access.
</code_architecture>

<pending_tasks>
-   **Implement Excel Export**: Deferred to the end.
-   **Fix WE-Korrekturen Sync**: Deferred to later.
-   **Admin User Management**: Admin whitelist RLS setup and optional client-side checks for the  table. The option to implement an Invite by Email feature within the dashboard.
-   **Projection Tool Enhancements**: Optional UI hint for manual WE, Bundesland selection persistence in Supabase, alternative rate models for projection (e.g., moving average), or a small badge with forecast on project card.
-   **Polygontool Enhancements**: Further geocoding improvements for difficult addresses or integration of a second geocoding provider (e.g., OpenCage) with an API key. Consider standard behavior for points exactly on the polygon boundary.
</pending_tasks>

<current_work>
Immediately prior to this summary, the AI engineer focused on implementing Supabase persistence for project-specific settings, including start/end dates, manual total WE, and federal state code. This involved preparing the client-side logic to fetch and upsert data to a new  table in Supabase, while also maintaining  synchronization for existing components.

Concurrently, the AI refined several UI/UX aspects:
-   The Admin Dashboard Pro title was precisely left-aligned with the content cards.
-   The date selection field for hourly VP activity was integrated directly into its respective card within  and now defaults to the current day.
-   The AI also provided the complete SQL block for the user to create the  table in Supabase, along with detailed explanations on RLS policies (for authenticated users or an existing ), ensuring the user understands how to correctly enable read/write access for the new table without affecting existing database structures.
The SQL provided is a ready-to-run script for table creation, trigger for , and policies for authenticated users, with commented-out options for .
</current_work>

<optional_next_step>
The next step is to test the newly implemented Supabase persistence for project settings by deploying the application and verifying that values persist after page reloads.
</optional_next_step>
